apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch-data
  labels:
    component: elasticsearch
    role: data
spec:
  replicas: {{ .Values.replicas.data }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      serviceAccount: elasticsearch
      containers:
      - name: elasticsearch-data
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ .Values.images.elasticsearch }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        env:
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: "NODE_DATA"
          value: "false"
        - name: "NODE_INGEST"
          value: "false"
        - name: "NODE_MASTER"
          value: "false"
        - name: "HTTP_ENABLE"
          value: "false"
        - name: "ES_JAVA_OPTS"
          value: "-Xms256m -Xmx256m"
        ports:
        - containerPort: {{ .Values.network.discovery.port }}
          name: {{ .Values.network.discovery.name }}
          protocol: {{ .Values.network.discovery.proto }}
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
      - name: storage
        emptyDir: {}
